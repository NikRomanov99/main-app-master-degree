/*
 * This file is generated by jOOQ.
 */
package ru.rsu.app.database.generated


import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl

import ru.rsu.app.database.generated.tables.AppUser
import ru.rsu.app.database.generated.tables.AvailableEquipment
import ru.rsu.app.database.generated.tables.Equipment
import ru.rsu.app.database.generated.tables.EquipmentType
import ru.rsu.app.database.generated.tables.Factory
import ru.rsu.app.database.generated.tables.Role


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.app_user</code>.
     */
    val APP_USER: AppUser get() = AppUser.APP_USER

    /**
     * The table <code>public.available_equipment</code>.
     */
    val AVAILABLE_EQUIPMENT: AvailableEquipment get() = AvailableEquipment.AVAILABLE_EQUIPMENT

    /**
     * The table <code>public.equipment</code>.
     */
    val EQUIPMENT: Equipment get() = Equipment.EQUIPMENT

    /**
     * The table <code>public.equipment_type</code>.
     */
    val EQUIPMENT_TYPE: EquipmentType get() = EquipmentType.EQUIPMENT_TYPE

    /**
     * The table <code>public.factory</code>.
     */
    val FACTORY: Factory get() = Factory.FACTORY

    /**
     * The table <code>public.role</code>.
     */
    val ROLE: Role get() = Role.ROLE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        AppUser.APP_USER,
        AvailableEquipment.AVAILABLE_EQUIPMENT,
        Equipment.EQUIPMENT,
        EquipmentType.EQUIPMENT_TYPE,
        Factory.FACTORY,
        Role.ROLE
    )
}
